basePath: /
definitions:
  authorization.apiAccessTokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
      sessionID:
        type: string
    type: object
  authorization.apiCommonFailure:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: Not Found
        type: string
    type: object
  authorization.apiCreateAccessTokenRequest:
    properties:
      clientID:
        description: User Client ID
        example: PWA_v0.0.1
        type: string
      device:
        $ref: '#/definitions/authorization.device'
      email:
        description: User Email
        example: test.user@financelime.com
        type: string
      password:
        description: User Password
        example: qmhVXVC1%hVNa0Hcq
        type: string
    required:
    - clientID
    - device
    - email
    - password
    type: object
  authorization.apiRefreshAccessTokenRequest:
    properties:
      refreshToken:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJmaW5hbmNlbGltZS5jb20iLCJzdWIiOiJBdXRob3JpemF0aW9uIiwicHVycG9zZSI6InJlZnJlc2giLCJzZXNzaW9uSUQiOiI2M2IyZjUyM2ZiZGQzMzFlZjQzM2U2NmU5NDZjYWQ2OTNkOTQ5MzdjMWUxNWNjMDI5YjFiNjE1YmExN2VjZWM3IiwidXNlckRhdGEiOiJpNHhTbDBmNXcrMGJSTE1KOURMVlp3NGJDZkpSSUFqQlhoN2VFZFlpNTV2L1QvVk1EK3RmNFNyK0NSV0ZnZEpoUkh2S1AyNnZGQ1AxZ05iOU4yejljMFRoYkRZNkFSdGt2WHkzMHJ3bTlDeXh0Vk1QdUUvRXh4UDdzaCs3MGVrbE5ObjdGS2xIIiwiaWF0IjoxNjIwNTIwNTg2fQ.4fd650daddded3a74c6fcfa28559d02c3ca6f32d55805b58ac88ccd302c5445e
        type: string
    required:
    - refreshToken
    type: object
  authorization.apiRequestUserPasswordResetRequest:
    properties:
      email:
        example: test.user@financelime.com
        type: string
    required:
    - email
    type: object
  authorization.apiRevokeRefreshTokenRequest:
    properties:
      sessionID:
        example: f58f06a96b69083b7c4fb068faa6c8314af0636e44ecc710261abe1759b07755
        type: string
    required:
    - sessionID
    type: object
  authorization.apiSignUpFailure409:
    properties:
      code:
        type: integer
      message:
        enum:
        - USER_ALREADY_EXIST
        - INVITE_NOT_FOUND
        - INVITE_HAS_ENDED
        type: string
    type: object
  authorization.apiSignUpRequest:
    properties:
      email:
        description: User email
        example: test.user@financelime.com
        type: string
      inviteCode:
        description: Invite code. Required depending on the setting of environment variable `AUTH_INVITE_CODE_REQUIRED`. The default is required.
        example: testInviteCode
        type: string
      language:
        description: User language
        example: en
        type: string
    required:
    - email
    - inviteCode
    - language
    type: object
  authorization.device:
    properties:
      height:
        example: 1920
        type: integer
      language:
        example: en-US
        type: string
      platform:
        example: Linux x86_64
        type: string
      timezone:
        example: "2"
        type: string
      width:
        example: 1060
        type: integer
    type: object
  authorization.session:
    properties:
      platform:
        type: string
      sessionID:
        type: string
      updatedAt:
        type: string
    type: object
  system.versionResponse:
    properties:
      build:
        example: fc56bb1 [2021-05-07_11:12:09]
        type: string
      number:
        example: v0.2.0-alpha
        type: string
    type: object
host: api.auth.dev.financelime.com
info:
  contact:
    email: dmalix@financelime.com
    name: API Support
  description: Financelime Authorization RESTful API service
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: Financelime Authorization
  version: v0.2.0-alpha
paths:
  /v1/oauth/sessions:
    delete:
      consumes:
      - application/json;charset=utf-8
      description: This request revoke the Refresh Token associated with the specified session. Thus, when the Access Token expires, then it cannot be renewed. And only after that, the user will be log out. Be aware that this query is idempotent.
      operationId: revoke_refresh_token
      parameters:
      - description: Data for revoking the Refresh Token
        in: body
        name: apiRevokeRefreshTokenRequest
        required: true
        schema:
          $ref: '#/definitions/authorization.apiRevokeRefreshTokenRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      security:
      - authorization: []
      summary: 'Revoke Refresh Token (Domain Action: Log Out)'
    get:
      description: Get a list of active sessions
      operationId: get_list_active_sessions
      produces:
      - application/json;charset=utf-8
      responses:
        "200":
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/authorization.session'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      security:
      - authorization: []
      summary: Get a list of active sessions
  /v1/oauth/token:
    post:
      consumes:
      - application/json;charset=utf-8
      description: Create Access Token
      operationId: create_access_token
      parameters:
      - description: Data for creating a new token
        in: body
        name: apiCreateAccessTokenRequest
        required: true
        schema:
          $ref: '#/definitions/authorization.apiCreateAccessTokenRequest'
      produces:
      - application/json;charset=utf-8
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/authorization.apiAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      summary: 'Create Access Token (Domain Action: Log In)'
    put:
      consumes:
      - application/json;charset=utf-8
      description: Refresh Access Token
      operationId: refresh_access_token
      parameters:
      - description: Data for refreshing the access token
        in: body
        name: apiRefreshAccessTokenRequest
        required: true
        schema:
          $ref: '#/definitions/authorization.apiRefreshAccessTokenRequest'
      produces:
      - application/json;charset=utf-8
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/authorization.apiAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      summary: 'Refresh Access Token (Domain Action: Renew authorization)'
  /v1/resetpassword:
    post:
      consumes:
      - application/json;charset=utf-8
      description: The service sends a confirmation link to the specified email. After confirmation, the service will send a new password for authorization.
      operationId: user_password_reset
      parameters:
      - description: Data for resetting your password
        in: body
        name: apiRequestUserPasswordResetRequest
        required: true
        schema:
          $ref: '#/definitions/authorization.apiRequestUserPasswordResetRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      summary: Request to user password reset
  /v1/signup:
    post:
      consumes:
      - application/json;charset=utf-8
      description: The service sends a confirmation link to the specified email. After confirmation, the service will send a password for authorization.
      operationId: create_new_user
      parameters:
      - description: Data for creating a new user
        in: body
        name: apiSignUpRequest
        required: true
        schema:
          $ref: '#/definitions/authorization.apiSignUpRequest'
      responses:
        "204":
          description: Successful operation
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/authorization.apiSignUpFailure409'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      summary: Create new user
  /v1/u/{confirmationKey}:
    get:
      description: API returns HTML-page with a message (success or error).
      operationId: confirm_user_email
      parameters:
      - description: Confirmation Key
        in: path
        name: confirmationKey
        required: true
        type: string
      produces:
      - text/plain;charset=utf-8
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/authorization.apiCommonFailure'
      summary: Confirm User Email
  /v1/version:
    get:
      description: Get Version
      operationId: get_version
      produces:
      - application/json;charset=utf-8
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/system.versionResponse'
      summary: Get the Service version
schemes:
- https
securityDefinitions:
  authorization:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
