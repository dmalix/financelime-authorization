{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Financelime Authorization RESTful API service",
        "title": "Financelime Authorization",
        "contact": {
            "name": "API Support",
            "email": "dmalix@financelime.com"
        },
        "license": {
            "name": "GNU General Public License v3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "v0.2.0-alpha"
    },
    "host": "api.auth.dev.financelime.com",
    "basePath": "/",
    "paths": {
        "/v1/oauth/sessions": {
            "get": {
                "security": [
                    {
                        "authorization": []
                    }
                ],
                "description": "Get a list of active sessions",
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Get a list of active sessions",
                "operationId": "get_list_active_sessions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/authorization.session"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "authorization": []
                    }
                ],
                "description": "This request revoke the Refresh Token associated with the specified session. Thus, when the Access Token expires, then it cannot be renewed. And only after that, the user will be log out. Be aware that this query is idempotent.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Revoke Refresh Token (Domain Action: Log Out)",
                "operationId": "revoke_refresh_token",
                "parameters": [
                    {
                        "description": "Data for revoking the Refresh Token",
                        "name": "apiRevokeRefreshTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorization.apiRevokeRefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            }
        },
        "/v1/oauth/token": {
            "put": {
                "description": "Refresh Access Token",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Refresh Access Token (Domain Action: Renew authorization)",
                "operationId": "refresh_access_token",
                "parameters": [
                    {
                        "description": "Data for refreshing the access token",
                        "name": "apiRefreshAccessTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorization.apiRefreshAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiAccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Access Token",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Create Access Token (Domain Action: Log In)",
                "operationId": "create_access_token",
                "parameters": [
                    {
                        "description": "Data for creating a new token",
                        "name": "apiCreateAccessTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCreateAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiAccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            }
        },
        "/v1/resetpassword": {
            "post": {
                "description": "The service sends a confirmation link to the specified email. After confirmation, the service will send a new password for authorization.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Request to user password reset",
                "operationId": "user_password_reset",
                "parameters": [
                    {
                        "description": "Data for resetting your password",
                        "name": "apiRequestUserPasswordResetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorization.apiRequestUserPasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            }
        },
        "/v1/signup": {
            "post": {
                "description": "The service sends a confirmation link to the specified email. After confirmation, the service will send a password for authorization.",
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Create new user",
                "operationId": "create_new_user",
                "parameters": [
                    {
                        "description": "Data for creating a new user",
                        "name": "apiSignUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorization.apiSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiSignUpFailure409"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            }
        },
        "/v1/u/{confirmationKey}": {
            "get": {
                "description": "API returns HTML-page with a message (success or error).",
                "produces": [
                    "text/plain;charset=utf-8"
                ],
                "summary": "Confirm User Email",
                "operationId": "confirm_user_email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Confirmation Key",
                        "name": "confirmationKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/authorization.apiCommonFailure"
                        }
                    }
                }
            }
        },
        "/v1/version": {
            "get": {
                "description": "Get Version",
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "summary": "Get the Service version",
                "operationId": "get_version",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/system.versionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authorization.apiAccessTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sessionID": {
                    "type": "string"
                }
            }
        },
        "authorization.apiCommonFailure": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "authorization.apiCreateAccessTokenRequest": {
            "type": "object",
            "required": [
                "clientID",
                "device",
                "email",
                "password"
            ],
            "properties": {
                "clientID": {
                    "description": "User Client ID",
                    "type": "string",
                    "example": "PWA_v0.0.1"
                },
                "device": {
                    "$ref": "#/definitions/authorization.device"
                },
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "test.user@financelime.com"
                },
                "password": {
                    "description": "User Password",
                    "type": "string",
                    "example": "qmhVXVC1%hVNa0Hcq"
                }
            }
        },
        "authorization.apiRefreshAccessTokenRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJmaW5hbmNlbGltZS5jb20iLCJzdWIiOiJBdXRob3JpemF0aW9uIiwicHVycG9zZSI6InJlZnJlc2giLCJzZXNzaW9uSUQiOiI2M2IyZjUyM2ZiZGQzMzFlZjQzM2U2NmU5NDZjYWQ2OTNkOTQ5MzdjMWUxNWNjMDI5YjFiNjE1YmExN2VjZWM3IiwidXNlckRhdGEiOiJpNHhTbDBmNXcrMGJSTE1KOURMVlp3NGJDZkpSSUFqQlhoN2VFZFlpNTV2L1QvVk1EK3RmNFNyK0NSV0ZnZEpoUkh2S1AyNnZGQ1AxZ05iOU4yejljMFRoYkRZNkFSdGt2WHkzMHJ3bTlDeXh0Vk1QdUUvRXh4UDdzaCs3MGVrbE5ObjdGS2xIIiwiaWF0IjoxNjIwNTIwNTg2fQ.4fd650daddded3a74c6fcfa28559d02c3ca6f32d55805b58ac88ccd302c5445e"
                }
            }
        },
        "authorization.apiRequestUserPasswordResetRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test.user@financelime.com"
                }
            }
        },
        "authorization.apiRevokeRefreshTokenRequest": {
            "type": "object",
            "required": [
                "sessionID"
            ],
            "properties": {
                "sessionID": {
                    "type": "string",
                    "example": "f58f06a96b69083b7c4fb068faa6c8314af0636e44ecc710261abe1759b07755"
                }
            }
        },
        "authorization.apiSignUpFailure409": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "enum": [
                        "USER_ALREADY_EXIST",
                        "INVITE_NOT_FOUND",
                        "INVITE_HAS_ENDED"
                    ]
                }
            }
        },
        "authorization.apiSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "inviteCode",
                "language"
            ],
            "properties": {
                "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "test.user@financelime.com"
                },
                "inviteCode": {
                    "description": "Invite code. Required depending on the setting of environment variable `AUTH_INVITE_CODE_REQUIRED`. The default is required.",
                    "type": "string",
                    "example": "testInviteCode"
                },
                "language": {
                    "description": "User language",
                    "type": "string",
                    "example": "en"
                }
            }
        },
        "authorization.device": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer",
                    "example": 1920
                },
                "language": {
                    "type": "string",
                    "example": "en-US"
                },
                "platform": {
                    "type": "string",
                    "example": "Linux x86_64"
                },
                "timezone": {
                    "type": "string",
                    "example": "2"
                },
                "width": {
                    "type": "integer",
                    "example": 1060
                }
            }
        },
        "authorization.session": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string"
                },
                "sessionID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "system.versionResponse": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string",
                    "example": "fc56bb1 [2021-05-07_11:12:09]"
                },
                "number": {
                    "type": "string",
                    "example": "v0.2.0-alpha"
                }
            }
        }
    },
    "securityDefinitions": {
        "authorization": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}